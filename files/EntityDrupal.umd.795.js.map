{"version":3,"file":"EntityDrupal.umd.795.js","mappings":"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","sources":["webpack://EntityDrupal/./src/views/TextDuplicateEntities.vue?39de","webpack://EntityDrupal/src/views/TextDuplicateEntities.vue","webpack://EntityDrupal/./src/views/TextDuplicateEntities.vue?a9b2","webpack://EntityDrupal/./src/views/TextDuplicateEntities.vue"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('b-button',{attrs:{\"variant\":\"info\"},on:{\"click\":_vm.duplicateEntities}},[_vm._v(\" duplicate entities \")]),_c('div',[_vm._v(\"numbersEntities: \"+_vm._s(_vm.numbersEntities))])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <b-button variant=\"info\" @click=\"duplicateEntities\">\n      duplicate entities\n    </b-button>\n    <div>numbersEntities: {{ numbersEntities }}</div>\n  </div>\n</template>\n<script>\nimport { mapState, mapGetters } from \"vuex\";\nexport default {\n  name: \"TextDuplicateEntities\",\n  data() {\n    return {\n      payload: {\n        id: 139, //152, //139,\n        content: {\n          name: [\n            {\n              value: \"Bienvenue chez test\",\n            },\n          ],\n          field_domain_access: [\n            {\n              target_id: \"test328_wb_horizon_kksa\",\n            },\n          ],\n          field_domain_source: [\n            {\n              target_id: \"test328_wb_horizon_kksa\",\n            },\n          ],\n          is_default_theme: [\n            {\n              value: false,\n            },\n          ],\n        },\n      },\n    };\n  },\n\n  computed: {\n    ...mapState([\"entityDuplicate\"]),\n    ...mapGetters([\"numbersEntities\"]),\n  },\n  mounted() {\n    //\n  },\n  methods: {\n    duplicateEntities() {\n      this.$store.dispatch(\"getMatriceEntities\", this.payload).then(() => {\n        this.prepareSaveEntities(this.$store.state);\n      });\n    },\n    prepareSaveEntities(state) {\n      /**\n       * Permet de creer les sous contenus et return les target_ids.\n       * @param {Array} items\n       * @param {Integer} i\n       * @param {Array} values\n       */\n      const loopItem = (items, i, values = []) => {\n        return new Promise((resolv, reject) => {\n          console.log(\"loopItem : \", items);\n          if (items[i]) {\n            const item = items[i];\n            if (items[i].entities) {\n              const keys = Object.keys(items[i].entities);\n              loopFieldEntity(\n                items[i].entities,\n                keys[0],\n                items[i].entity,\n                keys,\n                0\n              ).then((entity) => {\n                this.$store\n                  .dispatch(\"saveEntity\", {\n                    entity_type_id: items[i].target_type,\n                    value: entity,\n                    index: i,\n                  })\n                  .then((resp) => {\n                    //items[i].entity = resp.data.json;\n                    values.push({ target_id: resp.data.id });\n                    i = i + 1;\n                    if (i < items.length) {\n                      // loopEntityPromise(items, i).then((resp) => {\n                      //   values.push({ target_id: resp.data.id });\n                      // });\n                      resolv(loopItem(items, i, values));\n                    } else resolv(values);\n                  })\n                  .catch((er) => {\n                    console.log(\" catch : \", er);\n                    reject(er);\n                  });\n              });\n            } else {\n              this.$store\n                .dispatch(\"saveEntity\", {\n                  entity_type_id: item.target_type,\n                  value: item.entity,\n                  index: i,\n                })\n                .then((resp) => {\n                  values.push({ target_id: resp.data.id });\n                  i = i + 1;\n                  if (items.length <= i) {\n                    resolv(loopItem(items, i, values));\n                  } else {\n                    resolv(values);\n                  }\n                })\n                .catch((er) => {\n                  console.log(\"catch : \", er);\n                  reject(er);\n                });\n            }\n          } else resolv(values);\n        });\n      };\n      //\n      /**\n       * loopFieldEntity parcourt les entites enfants d'une entité parente, et a chaque passage MAJ l'entité parent.\n       *\n       * @param {Array} datas // tableau des entites enfants.\n       * @param {String} fieldname // fieldname\n       * @param {String} entity // entité parente\n       * @param {Array} keys // tableau des champs à parcourirt (permet de passer à l'etape suivante)\n       * @param {Integer} i   // l'etape encours (permet de passer à l'etape suivante)\n       * @return {Object} entity // l'entité parente MAJ.\n       */\n      const loopFieldEntity = (datas, fieldname, entity, keys, i) => {\n        return new Promise((resolv) => {\n          console.log(\"loopFieldEntity : \", datas);\n          // Si le champs contient des données,\n          // on parcourt chacune des entrées.\n          if (datas[fieldname] && datas[fieldname].length > 0) {\n            // Pour chaque champs, on cree les contenus et on recupere les ids.\n            loopItem(datas[fieldname], 0).then((resp) => {\n              console.log(\"loopFieldEntity result of loopItem : \", resp);\n              entity[fieldname] = resp;\n              // on passe au champs suivant.\n              i = i + 1;\n              if (keys.length > i) {\n                resolv(loopFieldEntity(datas, keys[i], entity, keys, i));\n              } else {\n                resolv(entity);\n              }\n            });\n          } else resolv(entity);\n        });\n      };\n      /**\n       * Permet de cree l'entité parent, apres que tous les entitées enfants soient ok.\n       * il est appelle par tous les enfants possedant des enfants.\n       * loopEntityPromise recois un tableau contenant les entites qui doivent etre cree.\n       * il retourne un tableau de target_ids => [{target_id:...},{target_id:...}, ... ].\n       *\n       * @param {*} datas\n       * @param {*} i\n       * @return resp [{id:..., json:...}] // return un json avec une proprieté json et une autre id.\n       */\n      const loopEntityPromise = (datas, i = null, values = []) => {\n        return new Promise((resolv, reject) => {\n          console.log(\"loopEntityPromise : \", datas);\n          if (datas[i]) {\n            // S'il contient des sous entités.\n            if (datas[i].entities && typeof datas[i].entities === \"object\") {\n              const keys = Object.keys(datas[i].entities);\n              loopFieldEntity(\n                datas[i].entities,\n                keys[0],\n                datas[i].entity,\n                keys,\n                0\n              ).then((entity) => {\n                console.log(\n                  \" loopEntityPromise SEND with override entity : \",\n                  entity\n                );\n                this.$store\n                  .dispatch(\"saveEntity\", {\n                    entity_type_id: datas[i].target_type,\n                    value: entity,\n                    index: i,\n                  })\n                  .then((resp) => {\n                    values.push({ target_id: resp.data.id });\n                    // datas[i].entity = resp.data.json;\n                    i = i + 1;\n                    if (i < datas.length) {\n                      resolv(loopEntityPromise(datas, i));\n                    } else resolv(values);\n                  })\n                  .catch((er) => {\n                    console.log(\"catch : \", er);\n                    reject(er);\n                  });\n              });\n            }\n            // S'il ne contient pas de sous entité.\n            else {\n              this.$store\n                .dispatch(\"saveEntity\", {\n                  entity_type_id: datas[i].target_type,\n                  value: datas[i].entity,\n                  index: i,\n                })\n                .then((resp) => {\n                  values.push({ target_id: resp.data.id });\n                  // datas[i].entity = resp.data.json;\n                  i = i + 1;\n                  if (i < datas.length) {\n                    resolv(loopEntityPromise(datas, i));\n                  } else resolv(values);\n                })\n                .catch((er) => {\n                  console.log(\"catch : \", er);\n                  reject(er);\n                });\n            }\n          } else {\n            console.log(\" loopEntityPromise END \");\n            resolv([]);\n          }\n        });\n      };\n      loopEntityPromise(state.entityDuplicate, 0);\n    },\n  },\n};\n</script>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-80[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./TextDuplicateEntities.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-80[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./TextDuplicateEntities.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TextDuplicateEntities.vue?vue&type=template&id=b2f7253a&\"\nimport script from \"./TextDuplicateEntities.vue?vue&type=script&lang=js&\"\nexport * from \"./TextDuplicateEntities.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["name","data","payload","id","content","value","field_domain_access","target_id","field_domain_source","is_default_theme","computed","mapState","mapGetters","mounted","methods","duplicateEntities","prepareSaveEntities","state","console","loopFieldEntity","items","keys","then","dispatch","entity_type_id","index","values","i","resolv","catch","reject","loopItem","entity","datas","loopEntityPromise"],"sourceRoot":""}