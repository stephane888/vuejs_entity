{"version":3,"file":"EntityDrupal.umd.min.280.js","mappings":"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","sources":["webpack://EntityDrupal/../components_bootstrapvuejs/src/components/Ressouces/MultiSelectTaxo.vue?eb22","webpack://EntityDrupal/../components_bootstrapvuejs/src/components/Ressouces/MultiSelectTaxo.vue","webpack://EntityDrupal/../components_bootstrapvuejs/src/components/Ressouces/MultiSelectTaxo.vue?e878","webpack://EntityDrupal/../components_bootstrapvuejs/src/components/Ressouces/MultiSelectTaxo.vue?6ef0"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ValidationProvider',{attrs:{\"name\":_vm.fullname,\"rules\":_vm.getRules()},scopedSlots:_vm._u([{key:\"default\",fn:function(v){return [_c('b-form-group',{attrs:{\"label\":_vm.field.label,\"description\":_vm.field.description}},[_c('div',{staticClass:\"autocomplete\"},[_c('multiselect',{attrs:{\"options\":_vm.options,\"custom-label\":_vm.nameWithLang,\"placeholder\":\"\",\"label\":\"text\",\"track-by\":\"text\",\"show-no-results\":true,\"show-labels\":false,\"loading\":_vm.isLoading,\"multiple\":_vm.cardinality,\"allow-empty\":true},on:{\"search-change\":_vm.asyncFind},model:{value:(_vm.value_computed),callback:function ($$v) {_vm.value_computed=$$v},expression:\"value_computed\"}},[_c('template',{slot:\"noResult\"},[_c('span',{staticClass:\"option__title\"},[_vm._v(\" Aucun contenu ne correspond à votre recherche \")])]),_c('template',{slot:\"placeholder\"},[_c('span',{staticClass:\"option__title\"},[_vm._v(\" Aucun contenu ... \")])]),_c('template',{slot:\"noOptions\"},[_c('span',{staticClass:\"option__title\"},[_vm._v(\" Saisir un ou plusieurs caractères ... \")])])],2),_c('div',{staticClass:\"text-danger\"},_vm._l((v.errors),function(error,ii){return _c('small',{key:ii,staticClass:\"d-block\"},[_vm._v(\" \"+_vm._s(error)+\" \")])}),0)],1)])]}}])})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <ValidationProvider v-slot=\"v\" :name=\"fullname\" :rules=\"getRules()\">\n    <b-form-group :label=\"field.label\" :description=\"field.description\">\n      <div class=\"autocomplete\">\n        <multiselect\n          v-model=\"value_computed\"\n          :options=\"options\"\n          :custom-label=\"nameWithLang\"\n          placeholder=\"\"\n          label=\"text\"\n          track-by=\"text\"\n          :show-no-results=\"true\"\n          :show-labels=\"false\"\n          :loading=\"isLoading\"\n          :multiple=\"cardinality\"\n          :allow-empty=\"true\"\n          @search-change=\"asyncFind\"\n        >\n          <template slot=\"noResult\">\n            <span class=\"option__title\">\n              Aucun contenu ne correspond à votre recherche\n            </span>\n          </template>\n          <template slot=\"placeholder\">\n            <span class=\"option__title\"> Aucun contenu ... </span>\n          </template>\n          <template slot=\"noOptions\">\n            <span class=\"option__title\">\n              Saisir un ou plusieurs caractères ...\n            </span>\n          </template>\n        </multiselect>\n        <div class=\"text-danger\">\n          <small v-for=\"(error, ii) in v.errors\" :key=\"ii\" class=\"d-block\">\n            {{ error }}\n          </small>\n        </div>\n      </div>\n    </b-form-group>\n  </ValidationProvider>\n</template>\n\n<script>\nimport { ValidationProvider } from \"vee-validate\";\nimport Multiselect from \"vue-multiselect\";\nimport termsTaxo from \"drupal-vuejs/src/App/jsonApi/termsTaxo.js\";\nimport loadField from \"../fieldsDrupal/loadField.js\";\nexport default {\n  name: \"MultiSelectTaxo\",\n  components: {\n    ValidationProvider,\n    Multiselect,\n  },\n  props: {\n    field: { type: Object, required: true },\n    model: { type: [Object, Array], required: true },\n    namespaceStore: { type: String, required: true },\n    parentName: {\n      type: String,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      isLoading: false,\n      options: [],\n      value_select: null,\n    };\n  },\n  computed: {\n    fullname() {\n      return this.parentName + this.field.name;\n    },\n    cardinality() {\n      if (this.field.cardinality === -1) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    /**\n     * @see https://skirtles-code.github.io/vue-examples/patterns/computed-v-model.html\n     */\n    value_computed: {\n      get() {\n        return this.value_select;\n      },\n      set(val) {\n        this.updateValue(val);\n      },\n    },\n  },\n  // watch: {\n  //   /**\n  //    * L'objectif est que cette valeur soit un reflet de la valeur contenu dans l'entité.\n  //    * @param {*} val\n  //    */\n  //   value_select(val) {\n  //     if (this.cardinality) {\n  //       const vals = [];\n  //       val.forEach((item) => {\n  //         vals.push({ target_id: item.value });\n  //       });\n  //       this.setValue(vals);\n  //     } else {\n  //       const vals = [];\n  //       if (val) vals.push({ target_id: val.value });\n  //       this.setValue(vals);\n  //     }\n  //   },\n  // },\n  mounted() {\n    this.loadDefaults();\n  },\n  methods: {\n    /**\n     *\n     * @param {*} tid\n     */\n    getTermByTid(tid) {\n      this.isLoading = true;\n      // Doit etre dynamique.\n      let vocabulary = this.getFistVocab();\n      const terms = new termsTaxo(vocabulary);\n      terms\n        .getValueByTid(tid)\n        .then(() => {\n          const options = terms.getOptions();\n          this.options = options;\n          if (this.cardinality) {\n            this.value_select = options;\n          } else if (options[0]) this.value_select = options[0];\n          this.isLoading = false;\n        })\n        .catch(() => {\n          this.isLoading = false;\n        });\n    },\n    /**\n     *\n     */\n    loadDefaults() {\n      this.model[this.field.name].forEach((item) => {\n        this.getTermByTid(item.target_id);\n      });\n    },\n    /**\n     * --\n     */\n    getFistVocab() {\n      if (this.field.definition_settings.handler_settings.target_bundles) {\n        const keys = Object.keys(\n          this.field.definition_settings.handler_settings.target_bundles\n        );\n        return this.field.definition_settings.handler_settings.target_bundles[\n          keys[0]\n        ];\n      } else if (this.field.definition_settings.target_type) {\n        return this.field.definition_settings.target_type;\n      } else return null;\n    },\n    /**\n     *\n     * @param {*} search\n     */\n    asyncFind(search) {\n      if (search.length >= 2) {\n        // Doit etre dynamique.\n        let vocabulary = this.getFistVocab();\n        const terms = new termsTaxo(vocabulary);\n        this.isLoading = true;\n        terms.getSearch(search).then(() => {\n          this.options = terms.getOptions();\n          this.isLoading = false;\n        });\n      }\n    },\n\n    nameWithLang({ text }) {\n      return `${text}`;\n    },\n    /**\n     *\n     * @param {*} vals\n     */\n    setValue(vals) {\n      if (this.namespaceStore) {\n        this.$store.dispatch(this.namespaceStore + \"/setValue\", {\n          value: vals,\n          fieldName: this.fullname,\n        });\n      } else\n        this.$store.dispatch(\"setValue\", {\n          value: vals,\n          fieldName: this.fullname,\n        });\n    },\n    /**\n     *\n     */\n    getRules() {\n      return loadField.getRules(this.field);\n    },\n    updateValue(val) {\n      this.value_select = val;\n      if (this.cardinality) {\n        const vals = [];\n        if (val && val.length)\n          val.forEach((item) => {\n            vals.push({ target_id: item.value });\n          });\n        this.setValue(vals);\n      } else {\n        const vals = [];\n        if (val && val.value) vals.push({ target_id: val.value });\n        this.setValue(vals);\n      }\n    },\n  },\n};\n</script>\n","import mod from \"-!../../../../entity-drupal/node_modules/thread-loader/dist/cjs.js!../../../../entity-drupal/node_modules/babel-loader/lib/index.js??clonedRuleSet-120[0].rules[0].use[1]!../../../../entity-drupal/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MultiSelectTaxo.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../entity-drupal/node_modules/thread-loader/dist/cjs.js!../../../../entity-drupal/node_modules/babel-loader/lib/index.js??clonedRuleSet-120[0].rules[0].use[1]!../../../../entity-drupal/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MultiSelectTaxo.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./MultiSelectTaxo.vue?vue&type=template&id=bc365446&\"\nimport script from \"./MultiSelectTaxo.vue?vue&type=script&lang=js&\"\nexport * from \"./MultiSelectTaxo.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../entity-drupal/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","fullname","getRules","scopedSlots","_u","key","fn","v","field","label","description","staticClass","options","nameWithLang","isLoading","cardinality","on","asyncFind","model","value","callback","$$v","value_computed","expression","slot","_v","_l","error","ii","_s","staticRenderFns","name","components","ValidationProvider","Multiselect","props","type","required","namespaceStore","parentName","String","data","value_select","computed","get","set","val","updateValue","mounted","loadDefaults","methods","getTermByTid","tid","terms","getValueByTid","then","catch","forEach","getFistVocab","definition_settings","handler_settings","target_bundles","keys","target_type","search","length","getSearch","setValue","vals","$store","dispatch","fieldName","loadField","target_id","component"],"sourceRoot":""}