{"version":3,"file":"EntityDrupal.umd.min.344.js","mappings":"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","sources":["webpack://EntityDrupal/../components_bootstrapvuejs/src/components/Ressouces/MultiSelectEntities.vue?bf9b","webpack://EntityDrupal/../components_bootstrapvuejs/src/components/Ressouces/MultiSelectEntities.vue","webpack://EntityDrupal/../components_bootstrapvuejs/src/components/Ressouces/MultiSelectEntities.vue?14b8","webpack://EntityDrupal/../components_bootstrapvuejs/src/components/Ressouces/MultiSelectEntities.vue?6867","webpack://EntityDrupal/../drupal-vuejs/src/App/jsonApi/itemsEntity.js"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ValidationProvider',{attrs:{\"name\":_vm.fullname,\"rules\":_vm.getRules()},scopedSlots:_vm._u([{key:\"default\",fn:function(v){return [_c('b-form-group',{attrs:{\"label\":_vm.field.label,\"description\":_vm.field.description}},[_c('div',{staticClass:\"autocomplete\"},[_c('multiselect',{attrs:{\"options\":_vm.options,\"custom-label\":_vm.nameWithLang,\"placeholder\":\"\",\"label\":\"text\",\"track-by\":\"text\",\"show-no-results\":true,\"show-labels\":false,\"loading\":_vm.isLoading,\"multiple\":_vm.cardinality,\"allow-empty\":true},on:{\"search-change\":_vm.asyncFind},model:{value:(_vm.value_computed),callback:function ($$v) {_vm.value_computed=$$v},expression:\"value_computed\"}},[_c('template',{slot:\"noResult\"},[_c('span',{staticClass:\"option__title\"},[_vm._v(\" Aucun contenu ne correspond à votre recherche \")])]),_c('template',{slot:\"placeholder\"},[_c('span',{staticClass:\"option__title\"},[_vm._v(\" Aucun contenu ... \")])]),_c('template',{slot:\"noOptions\"},[_c('span',{staticClass:\"option__title\"},[_vm._v(\" Saisir un ou plusieurs caractères ... \")])])],2),_c('div',{staticClass:\"text-danger\"},_vm._l((v.errors),function(error,ii){return _c('small',{key:ii,staticClass:\"d-block\"},[_vm._v(\" \"+_vm._s(error)+\" \")])}),0)],1)])]}}])})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <ValidationProvider v-slot=\"v\" :name=\"fullname\" :rules=\"getRules()\">\n    <b-form-group :label=\"field.label\" :description=\"field.description\">\n      <div class=\"autocomplete\">\n        <multiselect\n          v-model=\"value_computed\"\n          :options=\"options\"\n          :custom-label=\"nameWithLang\"\n          placeholder=\"\"\n          label=\"text\"\n          track-by=\"text\"\n          :show-no-results=\"true\"\n          :show-labels=\"false\"\n          :loading=\"isLoading\"\n          :multiple=\"cardinality\"\n          :allow-empty=\"true\"\n          @search-change=\"asyncFind\"\n        >\n          <template slot=\"noResult\">\n            <span class=\"option__title\">\n              Aucun contenu ne correspond à votre recherche\n            </span>\n          </template>\n          <template slot=\"placeholder\">\n            <span class=\"option__title\"> Aucun contenu ... </span>\n          </template>\n          <template slot=\"noOptions\">\n            <span class=\"option__title\">\n              Saisir un ou plusieurs caractères ...\n            </span>\n          </template>\n        </multiselect>\n        <div class=\"text-danger\">\n          <small v-for=\"(error, ii) in v.errors\" :key=\"ii\" class=\"d-block\">\n            {{ error }}\n          </small>\n        </div>\n      </div>\n    </b-form-group>\n  </ValidationProvider>\n</template>\n\n<script>\nimport { ValidationProvider } from \"vee-validate\";\nimport Multiselect from \"vue-multiselect\";\nimport itemsEntity from \"drupal-vuejs/src/App/jsonApi/itemsEntity.js\";\nimport loadField from \"../fieldsDrupal/loadField.js\";\nexport default {\n  name: \"MultiSelectEntities\",\n  components: {\n    ValidationProvider,\n    Multiselect,\n  },\n  props: {\n    field: { type: Object, required: true },\n    model: { type: [Object, Array], required: true },\n    namespaceStore: { type: String, required: true },\n    parentName: {\n      type: String,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      isLoading: false,\n      options: [],\n      value_select: null,\n    };\n  },\n  computed: {\n    fullname() {\n      return this.parentName + this.field.name;\n    },\n    cardinality() {\n      if (this.field.cardinality === -1) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    /**\n     * @see https://skirtles-code.github.io/vue-examples/patterns/computed-v-model.html\n     */\n    value_computed: {\n      get() {\n        return this.value_select;\n      },\n      set(val) {\n        this.updateValue(val);\n      },\n    },\n  },\n  // watch: {\n  //   /**\n  //    * L'objectif est que cette valeur soit un reflet de la valeur contenu dans l'entité.\n  //    * ( il ya un probleme avec le watch, des que la valeur change, il envoit les données,\n  //    *  ce qui est faux, c'est unqiuement à la modification de l'utilisateur ).\n  //    * @param {*} val\n  //    */\n  //   // value_select(val) {\n  //   //   if (this.cardinality) {\n  //   //     const vals = [];\n  //   //     val.forEach((item) => {\n  //   //       vals.push({ target_id: item.value });\n  //   //     });\n  //   //     this.setValue(vals);\n  //   //   } else {\n  //   //     const vals = [];\n  //   //     vals.push({ target_id: val.value });\n  //   //     this.setValue(vals);\n  //   //   }\n  //   // },\n  // },\n  mounted() {\n    this.loadDefaults();\n  },\n  methods: {\n    /**\n     *\n     * @param {*} tid\n     */\n    getTermById(tid) {\n      let entity_type_id = this.getFistVocab();\n      if (entity_type_id && loadField.config) {\n        const terms = new itemsEntity(\n          entity_type_id,\n          entity_type_id,\n          loadField.config\n        );\n        this.isLoading = true;\n        terms\n          .getValueById(tid)\n          .then(() => {\n            const options = terms.getOptions();\n            this.options.push(options[0]);\n            if (this.cardinality) {\n              this.value_select.push(options[0]);\n            } else if (options[0]) this.value_select = options[0];\n            this.isLoading = false;\n          })\n          .catch(() => {\n            this.isLoading = false;\n          });\n      }\n    },\n    /**\n     *\n     */\n    loadDefaults() {\n      this.value_select = [];\n      this.model[this.field.name].forEach((item) => {\n        this.getTermById(item.target_id);\n      });\n    },\n    /**\n     * --\n     */\n    getFistVocab() {\n      if (this.field.definition_settings.handler_settings.target_bundles) {\n        const keys = Object.keys(\n          this.field.definition_settings.handler_settings.target_bundles\n        );\n        return this.field.definition_settings.handler_settings.target_bundles[\n          keys[0]\n        ];\n      } else if (this.field.definition_settings.target_type) {\n        return this.field.definition_settings.target_type;\n      } else return null;\n    },\n    /**\n     *\n     * @param {*} search\n     */\n    asyncFind(search) {\n      if (search.length >= 2) {\n        // Doit etre dynamique.\n        let entity_type_id = this.getFistVocab();\n        if (entity_type_id && loadField.config) {\n          const terms = new itemsEntity(\n            entity_type_id,\n            entity_type_id,\n            loadField.config\n          );\n          this.isLoading = true;\n          terms\n            .getSearch(search)\n            .then(() => {\n              this.options = terms.getOptions();\n              this.isLoading = false;\n            })\n            .catch(() => {\n              this.isLoading = false;\n            });\n        }\n      }\n    },\n    /**\n     * cette fonction est utiliser pour mettre à jour les données dans l'entité.\n     * @deprecated\n     * @param {*} input\n     */\n    // selectUser(input) {\n    //   const vals = this.model[this.field.name];\n    //   vals.push({ target_id: input.value });\n    //   this.setValue(vals);\n    // },\n\n    nameWithLang({ text }) {\n      return `${text}`;\n    },\n    /**\n     *\n     * @param {*} vals\n     */\n    setValue(vals) {\n      if (this.namespaceStore) {\n        this.$store.dispatch(this.namespaceStore + \"/setValue\", {\n          value: vals,\n          fieldName: this.fullname,\n        });\n      } else\n        this.$store.dispatch(\"setValue\", {\n          value: vals,\n          fieldName: this.fullname,\n        });\n    },\n    /**\n     *\n     */\n    getRules() {\n      return loadField.getRules(this.field);\n    },\n    updateValue(val) {\n      //met à jour la valeur de value_computed\n      this.value_select = val;\n      if (this.cardinality) {\n        const vals = [];\n        if (val && val.length)\n          val.forEach((item) => {\n            vals.push({ target_id: item.value });\n          });\n        this.setValue(vals);\n      } else {\n        const vals = [];\n        if (val && val.value) vals.push({ target_id: val.value });\n        this.setValue(vals);\n      }\n    },\n  },\n};\n</script>\n","import mod from \"-!../../../../create-website/node_modules/thread-loader/dist/cjs.js!../../../../create-website/node_modules/babel-loader/lib/index.js??clonedRuleSet-120[0].rules[0].use[1]!../../../../create-website/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MultiSelectEntities.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../create-website/node_modules/thread-loader/dist/cjs.js!../../../../create-website/node_modules/babel-loader/lib/index.js??clonedRuleSet-120[0].rules[0].use[1]!../../../../create-website/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MultiSelectEntities.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./MultiSelectEntities.vue?vue&type=template&id=e4464984&\"\nimport script from \"./MultiSelectEntities.vue?vue&type=script&lang=js&\"\nexport * from \"./MultiSelectEntities.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../create-website/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import utilities from \"../utilities.js\";\nimport Confs from \"./Confs.js\";\nimport buildFilter from \"./buildFilter.js\";\nclass itemsEntity {\n  constructor(entity_type_id, bundle = null, config = null) {\n    this.entity_type_id = entity_type_id;\n    //\n    if (!bundle) {\n      bundle = entity_type_id;\n    }\n    this.url = Confs.baseURl + \"/\" + this.entity_type_id + \"/\" + bundle;\n    this.items = [];\n    this.newConfig = config;\n    // En function de l'environement on doit ajouter les paramettres de bases.( notament baseUrl, TestDomain, les methodes surchargées ).\n    if (config) {\n      // à ce state la surcharge total pose probleme, donc on doit surcharger par necessite.\n      // utilities = {\n      //   ...utilities,\n      //   ...config,\n      // };\n      if (config.TestDomain) utilities.TestDomain = config.TestDomain;\n    }\n  }\n  /**\n   * Recupere les items en passant par le token.\n   * ( ce cas de figure correspond à une application qui est sur le meme domaine ).\n   */\n  get() {\n    return new Promise((resolv) => {\n      utilities.dGet(this.url, Confs.headers).then((resp) => {\n        this.items = resp.data;\n        resolv(resp.data);\n      });\n    });\n  }\n  /**\n   * Recupere les items\n   */\n  getSearch(search) {\n    const filter = new buildFilter();\n    filter.addFilter(\"name\", \"CONTAINS\", search);\n    return new Promise((resolv) => {\n      utilities\n        .dGet(this.url + \"?\" + filter.query, Confs.headers)\n        .then((resp) => {\n          this.items = resp.data;\n          resolv(resp.data);\n        });\n    });\n  }\n  /**\n   *\n   * @returns *\n   */\n  getValue(term) {\n    const filter = new buildFilter();\n    filter.addFilter(\"name\", \"=\", term);\n    return new Promise((resolv) => {\n      utilities\n        .dGet(this.url + \"?\" + filter.query, Confs.headers)\n        .then((resp) => {\n          this.items = resp.data;\n          resolv(resp.data);\n        });\n    });\n  }\n  /**\n   *\n   * @returns *\n   */\n  getValueByTid(id) {\n    const filter = new buildFilter();\n    filter.addFilter(\"tid\", \"=\", id);\n    return new Promise((resolv, reject) => {\n      utilities\n        .dGet(this.url + \"?\" + filter.query, Confs.headers)\n        .then((resp) => {\n          this.items = resp.data;\n          resolv(resp.data);\n        })\n        .catch((er) => {\n          reject(er);\n        });\n    });\n  }\n\n  /**\n   *\n   * @returns *\n   */\n  getValueById(id) {\n    const filter = new buildFilter();\n    let fieldId = \"id\";\n    switch (this.entity_type_id) {\n      case \"user\":\n        fieldId = \"uid\";\n        break;\n      case \"domain\":\n        fieldId = \"drupal_internal__id\";\n        break;\n    }\n\n    filter.addFilter(fieldId, \"=\", id);\n    return new Promise((resolv) => {\n      utilities\n        .get(this.url + \"?\" + filter.query, Confs.headers)\n        .then((resp) => {\n          this.items = resp.data;\n          resolv(resp.data);\n        });\n    });\n  }\n  /**\n   * Retourne les termes sous formes de liste d'otpions.\n   */\n  getOptions() {\n    const options = [];\n    for (const i in this.items.data) {\n      const term = this.items.data[i];\n      if (this.entity_type_id == \"user\") {\n        options.push({\n          text: term.attributes.name,\n          value: term.attributes.drupal_internal__uid,\n        });\n      } else if (term.attributes.name) {\n        options.push({\n          text: term.attributes.name,\n          value: term.attributes.drupal_internal__id,\n        });\n      } else if (term.attributes.label) {\n        options.push({\n          text: term.attributes.label,\n          value: term.attributes.drupal_internal__id,\n        });\n      }\n    }\n    return options;\n  }\n  /**\n   * On a deux cas interne et externe au domaine, et en function de l'environnement\n   * on doit utiliser token ou basic authentification.\n   * ( On ajoute cette variable en attendant la validation des autres modules de plus\n   * il faudra que dans \"config\" la methode dGet existe, ce qui n'est pas le cas pour certains environnement.\n   * gestion-projet-v2 => OK (en mode serve)\n   * edit-entity => ??\n   * Creation-cv => ??\n   * Creation de site web => ??\n   * ).\n   */\n  remplaceConfig() {\n    utilities = this.newConfig;\n  }\n}\nexport default itemsEntity;\n"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","fullname","getRules","scopedSlots","_u","key","fn","v","field","label","description","staticClass","options","nameWithLang","isLoading","cardinality","on","asyncFind","model","value","callback","$$v","value_computed","expression","slot","_v","_l","error","ii","_s","staticRenderFns","name","components","ValidationProvider","Multiselect","props","type","required","namespaceStore","parentName","String","data","value_select","computed","get","set","val","updateValue","mounted","loadDefaults","methods","getTermById","tid","entity_type_id","loadField","terms","getValueById","then","catch","forEach","getFistVocab","definition_settings","handler_settings","target_bundles","keys","target_type","search","length","getSearch","setValue","vals","$store","dispatch","fieldName","target_id","component","itemsEntity","bundle","config","url","Confs","items","newConfig","TestDomain","utilities","Promise","resolv","resp","filter","buildFilter","addFilter","query","term","id","reject","er","fieldId","i","push","text","attributes","drupal_internal__uid","drupal_internal__id"],"sourceRoot":""}