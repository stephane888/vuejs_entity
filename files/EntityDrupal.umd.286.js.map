{"version":3,"file":"EntityDrupal.umd.286.js","mappings":";;;;;;;;;;;;;;;AAAA,0BAA0B,aAAa,0BAA0B,wBAAwB,2BAA2B,8BAA8B,+EAA+E,OAAO,2CAA2C,sBAAsB,sCAAsC,2BAA2B,OAAO,yBAAyB,2DAA2D,OAAO,oGAAoG,KAAK,mBAAmB,QAAQ,8CAA8C,iBAAiB,wBAAwB,2BAA2B,OAAO,oGAAoG,KAAK,mBAAmB,QAAQ,8CAA8C,iBAAiB,wBAAwB,QAAQ,GAAG;AAC/6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC8B+C;AAC/C,iFAAe;AACfA,8BADA;AAEAC,gBAFA;AAGAC;AACAC;AAAAC;AAAAC;AAAA,KADA;AAEAC;AAAAF;AAAAC;AAAA,KAFA;AAGAE;AAAAH;AAAAC;AAAA,KAHA;AAIAG;AAAAJ;AAAAC;AAAA;AAJA,GAHA;AASAI,MATA,kBASA;AACA;AACAC,iBADA;AAEAC;AAFA;AAIA,GAdA;AAeAC;AACAC,0BADA,oCACA;AACA;;AACA;AACA;AACAH;AACAI,oBADA;AAEAC;AAFA;AAIA;AACA;;AACA;AACA,KAZA;AAaAC,kBAbA,4BAaA;AACA,uEACA;AACA,KAhBA;AAiBAC,eAjBA,yBAiBA;AACA,0DACA;AACA;AApBA,GAfA;AAqCAC,SArCA,qBAqCA;AACA;AACA,GAvCA;AAwCAC;AACAC,gBADA,0BACA;AACA;AACA,+BACA,8DADA;AAGA,8EACAC,OADA;AAGA,OAPA,MAOA;AACA,KAVA;AAWAC,SAXA,iBAWAC,GAXA,EAWA;AACA;AACA;AAAAC;AAAA,cACAC;AAAAX;AAAA;AACA;AACA,KAhBA;;AAiBA;AACA;AACA;AACAY,YApBA,sBAoBA;AACA;AACA,iCACA,gDADA,KAEA;AACA;;AACA;AACA,KA3BA;AA4BAC,sBA5BA,8BA4BAC,UA5BA,EA4BA;AACA;AACA,oEACAC,KADA,GAEA,IAFA;AAGA,KAjCA;AAkCAC,YAlCA,sBAkCA;AACA,aAAa,0CAAe;AAC5B;AApCA;AAxCA;;AChC2U,CAAC,2FAAe,4CAAG,EAAC;;;;ACA5P;AAC3B;AACL;;;AAGnE;AACA,CAAuH;AACvH,gBAAgB,sCAAU;AAC1B,EAAE,sDAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA,yDAAe","sources":["webpack://EntityDrupal/../components_bootstrapvuejs/src/components/Ressouces/OptionsAllowedValues.vue?4bdb","webpack://EntityDrupal/../components_bootstrapvuejs/src/components/Ressouces/OptionsAllowedValues.vue","webpack://EntityDrupal/../components_bootstrapvuejs/src/components/Ressouces/OptionsAllowedValues.vue?e23d","webpack://EntityDrupal/../components_bootstrapvuejs/src/components/Ressouces/OptionsAllowedValues.vue?00ab"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"d-none for-test\"},[_vm._v(\"options value : \"+_vm._s(_vm.field.type))]),_c('ValidationProvider',{attrs:{\"name\":_vm.fullname,\"rules\":_vm.getRules()},scopedSlots:_vm._u([{key:\"default\",fn:function(validation){return [_c('b-form-group',{attrs:{\"label\":_vm.field.label}},[(_vm.field.type == 'options_select')?_c('b-form-select',{attrs:{\"options\":_vm.options_allowed_values,\"state\":_vm.getValidationState(validation),\"name\":_vm.fullname},on:{\"change\":_vm.input},model:{value:(_vm.selected),callback:function ($$v) {_vm.selected=$$v},expression:\"selected\"}}):_c('b-form-radio-group',{attrs:{\"options\":_vm.options_allowed_values,\"name\":_vm.fullname,\"state\":_vm.getValidationState(validation)},on:{\"change\":_vm.input},model:{value:(_vm.selected),callback:function ($$v) {_vm.selected=$$v},expression:\"selected\"}})],1)]}}])})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <div class=\"d-none for-test\">options value : {{ field.type }}</div>\n    <ValidationProvider\n      v-slot=\"validation\"\n      :name=\"fullname\"\n      :rules=\"getRules()\"\n    >\n      <b-form-group :label=\"field.label\">\n        <b-form-select\n          v-if=\"field.type == 'options_select'\"\n          v-model=\"selected\"\n          :options=\"options_allowed_values\"\n          :state=\"getValidationState(validation)\"\n          :name=\"fullname\"\n          @change=\"input\"\n        ></b-form-select>\n        <b-form-radio-group\n          v-else\n          v-model=\"selected\"\n          :options=\"options_allowed_values\"\n          :name=\"fullname\"\n          :state=\"getValidationState(validation)\"\n          @change=\"input\"\n        ></b-form-radio-group>\n      </b-form-group>\n    </ValidationProvider>\n  </div>\n</template>\n\n<script>\nimport config from \"../fieldsDrupal/loadField\";\nexport default {\n  name: \"OptionsAllowedValues\",\n  components: {},\n  props: {\n    field: { type: Object, required: true },\n    model: { type: [Object, Array], required: true },\n    namespaceStore: { type: String, required: true },\n    fullname: { type: String, required: true },\n  },\n  data() {\n    return {\n      options: [],\n      selected: null,\n    };\n  },\n  computed: {\n    options_allowed_values() {\n      const options = [];\n      if (this.field.definition_settings.allowed_values) {\n        for (const i in this.field.definition_settings.allowed_values) {\n          options.push({\n            value: i,\n            text: this.field.definition_settings.allowed_values[i],\n          });\n        }\n      }\n      return options;\n    },\n    is_target_type() {\n      if (this.field.definition_settings.target_type) return true;\n      else return false;\n    },\n    is_multiple() {\n      if (this.field.cardinality === 1) return false;\n      else return true;\n    },\n  },\n  mounted() {\n    this.selected = this.getValue();\n  },\n  methods: {\n    getFistVocab() {\n      if (this.field.definition_settings.handler_settings.target_bundles) {\n        const keys = Object.keys(\n          this.field.definition_settings.handler_settings.target_bundles\n        );\n        return this.field.definition_settings.handler_settings.target_bundles[\n          keys[0]\n        ];\n      } else return null;\n    },\n    input(val) {\n      const vals = [];\n      if (this.is_target_type) vals.push({ target_id: val });\n      else vals.push({ value: val });\n      this.$emit(\"setValue\", vals);\n    },\n    /**\n     * Cette approche a apparament un soucis car il ne tient pas en compte le multiple value.\n     */\n    getValue() {\n      if (this.model[this.field.name] && this.model[this.field.name][0]) {\n        if (this.is_target_type)\n          return this.model[this.field.name][0].target_id;\n        else return this.model[this.field.name][0].value;\n      }\n      return null;\n    },\n    getValidationState(validation) {\n      var valid = true;\n      return (validation.dirty || validation.validated) && !valid\n        ? valid\n        : null;\n    },\n    getRules() {\n      return config.getRules(this.field);\n    },\n  },\n};\n</script>\n","import mod from \"-!../../../../entity-drupal/node_modules/thread-loader/dist/cjs.js!../../../../entity-drupal/node_modules/babel-loader/lib/index.js??clonedRuleSet-80[0].rules[0].use[1]!../../../../entity-drupal/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./OptionsAllowedValues.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../entity-drupal/node_modules/thread-loader/dist/cjs.js!../../../../entity-drupal/node_modules/babel-loader/lib/index.js??clonedRuleSet-80[0].rules[0].use[1]!../../../../entity-drupal/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./OptionsAllowedValues.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./OptionsAllowedValues.vue?vue&type=template&id=6505b50f&\"\nimport script from \"./OptionsAllowedValues.vue?vue&type=script&lang=js&\"\nexport * from \"./OptionsAllowedValues.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../entity-drupal/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["name","components","props","field","type","required","model","namespaceStore","fullname","data","options","selected","computed","options_allowed_values","value","text","is_target_type","is_multiple","mounted","methods","getFistVocab","keys","input","val","target_id","vals","getValue","getValidationState","validation","valid","getRules"],"sourceRoot":""}