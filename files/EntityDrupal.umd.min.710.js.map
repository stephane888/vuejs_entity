{"version":3,"file":"EntityDrupal.umd.min.710.js","mappings":"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","sources":["webpack://EntityDrupal/../components_bootstrapvuejs/src/components/Ressouces/OptionsEntities.vue?07fe","webpack://EntityDrupal/../drupal-vuejs/src/App/jsonApi/itemsEntity.js","webpack://EntityDrupal/../components_bootstrapvuejs/src/components/Ressouces/OptionsEntities.vue","webpack://EntityDrupal/../components_bootstrapvuejs/src/components/Ressouces/OptionsEntities.vue?87f6","webpack://EntityDrupal/../components_bootstrapvuejs/src/components/Ressouces/OptionsEntities.vue?e0b0"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('b-form-group',{attrs:{\"label\":_vm.field.label}},[_c('b-form-radio-group',{attrs:{\"options\":_vm.options,\"name\":_vm.field.name},on:{\"change\":_vm.input},model:{value:(_vm.selected),callback:function ($$v) {_vm.selected=$$v},expression:\"selected\"}})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import utilities from \"../utilities.js\";\nimport Confs from \"./Confs.js\";\nimport buildFilter from \"./buildFilter.js\";\nclass itemsEntity {\n  constructor(entity_type_id, bundle = null, config = null) {\n    this.entity_type_id = entity_type_id;\n    //\n    if (!bundle) {\n      bundle = entity_type_id;\n    }\n    this.url = Confs.baseURl + \"/\" + this.entity_type_id + \"/\" + bundle;\n    this.items = [];\n    // en function de l'environement on doit ajouter les paramettres de bases.( notament baseUrl, TestDomain, les methodes surchargÃ©es ).\n    if (config) {\n      utilities = {\n        ...utilities,\n        ...config,\n      };\n    }\n  }\n  /**\n   * Recupere les items\n   */\n  get() {\n    return new Promise((resolv) => {\n      utilities.dGet(this.url, Confs.headers).then((resp) => {\n        this.items = resp.data;\n        resolv(resp.data);\n      });\n    });\n  }\n  /**\n   * Recupere les items\n   */\n  getSearch(search) {\n    const filter = new buildFilter();\n    filter.addFilter(\"name\", \"CONTAINS\", search);\n    return new Promise((resolv) => {\n      utilities\n        .dGet(this.url + \"?\" + filter.query, Confs.headers)\n        .then((resp) => {\n          this.items = resp.data;\n          resolv(resp.data);\n        });\n    });\n  }\n  /**\n   *\n   * @returns *\n   */\n  getValue(term) {\n    const filter = new buildFilter();\n    filter.addFilter(\"name\", \"=\", term);\n    return new Promise((resolv) => {\n      utilities\n        .dGet(this.url + \"?\" + filter.query, Confs.headers)\n        .then((resp) => {\n          this.items = resp.data;\n          resolv(resp.data);\n        });\n    });\n  }\n  /**\n   *\n   * @returns *\n   */\n  getValueByTid(id) {\n    const filter = new buildFilter();\n    filter.addFilter(\"tid\", \"=\", id);\n    return new Promise((resolv, reject) => {\n      utilities\n        .dGet(this.url + \"?\" + filter.query, Confs.headers)\n        .then((resp) => {\n          this.items = resp.data;\n          resolv(resp.data);\n        })\n        .catch((er) => {\n          reject(er);\n        });\n    });\n  }\n\n  /**\n   *\n   * @returns *\n   */\n  getValueById(id) {\n    const filter = new buildFilter();\n    filter.addFilter(\"id\", \"=\", id);\n    return new Promise((resolv) => {\n      utilities\n        .get(this.url + \"?\" + filter.query, Confs.headers)\n        .then((resp) => {\n          this.items = resp.data;\n          resolv(resp.data);\n        });\n    });\n  }\n  /**\n   * Retourne les termes sous formes de liste d'otpions.\n   */\n  getOptions() {\n    const options = [];\n    for (const i in this.items.data) {\n      const term = this.items.data[i];\n      if (term.attributes.name && term.attributes.drupal_internal__uid)\n        options.push({\n          text: term.attributes.name,\n          value: term.attributes.drupal_internal__uid,\n        });\n    }\n    return options;\n  }\n}\nexport default itemsEntity;\n","<template>\n  <div>\n    <b-form-group :label=\"field.label\">\n      <b-form-radio-group\n        v-model=\"selected\"\n        :options=\"options\"\n        :name=\"field.name\"\n        @change=\"input\"\n      ></b-form-radio-group>\n    </b-form-group>\n  </div>\n</template>\n\n<script>\nimport itemsEntity from \"drupal-vuejs/src/App/jsonApi/itemsEntity.js\";\nimport loadField from \"../fieldsDrupal/loadField.js\";\nexport default {\n  name: \"OptionsTaxonomy\",\n  components: {},\n  props: {\n    field: { type: Object, required: true },\n    model: { type: [Object, Array], required: true },\n    namespaceStore: { type: String, required: true },\n  },\n  data() {\n    return {\n      options: [],\n      selected: null,\n    };\n  },\n  mounted() {\n    this.loadTerms();\n  },\n  methods: {\n    loadTerms() {\n      let vocabulary = this.getFistVocab();\n      console.log(\"vocabulary : \", vocabulary);\n      if (vocabulary && loadField.config) {\n        const terms = new itemsEntity(vocabulary, vocabulary, loadField.config);\n        terms.get().then(() => {\n          this.options = terms.getOptions();\n        });\n      }\n    },\n    getFistVocab() {\n      if (this.field.definition_settings.handler_settings.target_bundles) {\n        const keys = Object.keys(\n          this.field.definition_settings.handler_settings.target_bundles\n        );\n        return this.field.definition_settings.handler_settings.target_bundles[\n          keys[0]\n        ];\n      } else if (this.field.definition_settings.target_type) {\n        return this.field.definition_settings.target_type;\n      } else return null;\n    },\n    input(val) {\n      const vals = [];\n      vals.push({ target_id: val });\n      this.$emit(\"setValue\", vals);\n    },\n  },\n};\n</script>\n","import mod from \"-!../../../../create-website/node_modules/thread-loader/dist/cjs.js!../../../../create-website/node_modules/babel-loader/lib/index.js??clonedRuleSet-120[0].rules[0].use[1]!../../../../create-website/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./OptionsEntities.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../create-website/node_modules/thread-loader/dist/cjs.js!../../../../create-website/node_modules/babel-loader/lib/index.js??clonedRuleSet-120[0].rules[0].use[1]!../../../../create-website/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./OptionsEntities.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./OptionsEntities.vue?vue&type=template&id=14cca942&\"\nimport script from \"./OptionsEntities.vue?vue&type=script&lang=js&\"\nexport * from \"./OptionsEntities.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../create-website/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","field","label","options","name","on","input","model","value","callback","$$v","selected","expression","staticRenderFns","itemsEntity","entity_type_id","bundle","config","url","Confs","items","utilities","Promise","resolv","then","resp","data","search","filter","buildFilter","addFilter","query","term","id","reject","catch","er","i","attributes","drupal_internal__uid","push","text","components","props","type","required","namespaceStore","mounted","loadTerms","methods","console","log","vocabulary","loadField","terms","get","getFistVocab","definition_settings","handler_settings","target_bundles","keys","target_type","val","vals","target_id","$emit","component"],"sourceRoot":""}