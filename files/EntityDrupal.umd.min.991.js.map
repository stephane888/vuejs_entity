{"version":3,"file":"EntityDrupal.umd.min.991.js","mappings":"uOAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,MAAM,CAACE,YAAY,mBAAmB,CAACN,EAAIO,GAAG,mBAAmBP,EAAIQ,GAAGR,EAAIS,MAAMC,SAASN,EAAG,qBAAqB,CAACO,MAAM,CAAC,KAAOX,EAAIY,SAAS,MAAQZ,EAAIa,YAAYC,YAAYd,EAAIe,GAAG,CAAC,CAACC,IAAI,UAAUC,GAAG,SAASC,GAAY,MAAO,CAACd,EAAG,eAAe,CAACO,MAAM,CAAC,MAAQX,EAAIS,MAAMU,QAAQ,CAAoB,kBAAlBnB,EAAIS,MAAMC,KAA0BN,EAAG,gBAAgB,CAACO,MAAM,CAAC,QAAUX,EAAIoB,uBAAuB,MAAQpB,EAAIqB,mBAAmBH,GAAY,KAAOlB,EAAIY,UAAUU,GAAG,CAAC,OAAStB,EAAIuB,OAAOC,MAAM,CAACC,MAAOzB,EAAY,SAAE0B,SAAS,SAAUC,GAAM3B,EAAI4B,SAASD,GAAKE,WAAW,cAAczB,EAAG,qBAAqB,CAACO,MAAM,CAAC,QAAUX,EAAIoB,uBAAuB,KAAOpB,EAAIY,SAAS,MAAQZ,EAAIqB,mBAAmBH,IAAaI,GAAG,CAAC,OAAStB,EAAIuB,OAAOC,MAAM,CAACC,MAAOzB,EAAY,SAAE0B,SAAS,SAAUC,GAAM3B,EAAI4B,SAASD,GAAKE,WAAW,eAAe,WAAW,IAC96BC,EAAkB,G,+BC+BtB,GACEC,KAAM,uBACNC,WAAY,GACZC,MAAO,CACLxB,MAAO,CAAXC,KAAAA,OAAAwB,UAAAA,GACIV,MAAO,CAAXd,KAAAA,CAAAA,OAAAA,OAAAwB,UAAAA,GACIC,eAAgB,CAApBzB,KAAAA,OAAAwB,UAAAA,GACItB,SAAU,CAAdF,KAAAA,OAAAwB,UAAAA,IAEEE,KATF,WAUI,MAAO,CACLC,QAAS,GACTT,SAAU,OAGdU,SAAU,CACRlB,uBADJ,WAEM,IAAN,KACM,GAAInB,KAAKQ,MAAM8B,oBAAoBC,eACjC,IAAK,IAAb,mDACUH,EAAQI,KAAK,CACXhB,MAAOiB,EACPC,KAAM1C,KAAKQ,MAAM8B,oBAAoBC,eAAeE,KAI1D,OAAOL,GAETO,eAbJ,WAcM,QAAI3C,KAAKQ,MAAM8B,oBAAoBM,aAGrCC,YAjBJ,WAkBM,OAA+B,IAA3B7C,KAAKQ,MAAMsC,cAInBC,QArCF,WAsCI/C,KAAK2B,SAAW3B,KAAKgD,YAEvBC,QAAS,CACPC,aADJ,WAEM,GAAIlD,KAAKQ,MAAM8B,oBAAoBa,iBAAiBC,eAAgB,CAClE,IAAR,cACA,gEAEQ,OAAOpD,KAAKQ,MAAM8B,oBAAoBa,iBAAiBC,eAC/DC,EAAAA,IAEA,aAEI/B,MAXJ,SAWAgC,GACM,IAAN,KACUtD,KAAK2C,eAAgBY,EAAKf,KAAK,CAAzCgB,UAAAA,IACAD,EAAAA,KAAAA,CAAA/B,MAAAA,IACMxB,KAAKyD,MAAM,WAAYF,IAKzBP,SApBJ,WAqBM,OAAIhD,KAAKuB,MAAMvB,KAAKQ,MAAMsB,OAAS9B,KAAKuB,MAAMvB,KAAKQ,MAAMsB,MAAM,GACzD9B,KAAK2C,eACjB,yCACA,qCAEa,MAETvB,mBA5BJ,SA4BAH,GACM,IAAIyC,GAAQ,EACZ,OAAQzC,EAAW0C,QAAS1C,EAAW2C,WAAeF,EAE5D,KADAA,GAGI9C,SAlCJ,WAmCM,OAAO,aAAgBZ,KAAKQ,UC3G8S,I,UCO5UqD,GAAY,OACd,EACA/D,EACA+B,GACA,EACA,KACA,KACA,MAIF,EAAegC,EAAiB","sources":["webpack://EntityDrupal/../components_bootstrapvuejs/src/components/Ressouces/OptionsAllowedValues.vue?4bdb","webpack://EntityDrupal/../components_bootstrapvuejs/src/components/Ressouces/OptionsAllowedValues.vue","webpack://EntityDrupal/../components_bootstrapvuejs/src/components/Ressouces/OptionsAllowedValues.vue?c76a","webpack://EntityDrupal/../components_bootstrapvuejs/src/components/Ressouces/OptionsAllowedValues.vue?00ab"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"d-none for-test\"},[_vm._v(\"options value : \"+_vm._s(_vm.field.type))]),_c('ValidationProvider',{attrs:{\"name\":_vm.fullname,\"rules\":_vm.getRules()},scopedSlots:_vm._u([{key:\"default\",fn:function(validation){return [_c('b-form-group',{attrs:{\"label\":_vm.field.label}},[(_vm.field.type == 'options_select')?_c('b-form-select',{attrs:{\"options\":_vm.options_allowed_values,\"state\":_vm.getValidationState(validation),\"name\":_vm.fullname},on:{\"change\":_vm.input},model:{value:(_vm.selected),callback:function ($$v) {_vm.selected=$$v},expression:\"selected\"}}):_c('b-form-radio-group',{attrs:{\"options\":_vm.options_allowed_values,\"name\":_vm.fullname,\"state\":_vm.getValidationState(validation)},on:{\"change\":_vm.input},model:{value:(_vm.selected),callback:function ($$v) {_vm.selected=$$v},expression:\"selected\"}})],1)]}}])})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <div class=\"d-none for-test\">options value : {{ field.type }}</div>\n    <ValidationProvider\n      v-slot=\"validation\"\n      :name=\"fullname\"\n      :rules=\"getRules()\"\n    >\n      <b-form-group :label=\"field.label\">\n        <b-form-select\n          v-if=\"field.type == 'options_select'\"\n          v-model=\"selected\"\n          :options=\"options_allowed_values\"\n          :state=\"getValidationState(validation)\"\n          :name=\"fullname\"\n          @change=\"input\"\n        ></b-form-select>\n        <b-form-radio-group\n          v-else\n          v-model=\"selected\"\n          :options=\"options_allowed_values\"\n          :name=\"fullname\"\n          :state=\"getValidationState(validation)\"\n          @change=\"input\"\n        ></b-form-radio-group>\n      </b-form-group>\n    </ValidationProvider>\n  </div>\n</template>\n\n<script>\nimport config from \"../fieldsDrupal/loadField\";\nexport default {\n  name: \"OptionsAllowedValues\",\n  components: {},\n  props: {\n    field: { type: Object, required: true },\n    model: { type: [Object, Array], required: true },\n    namespaceStore: { type: String, required: true },\n    fullname: { type: String, required: true },\n  },\n  data() {\n    return {\n      options: [],\n      selected: null,\n    };\n  },\n  computed: {\n    options_allowed_values() {\n      const options = [];\n      if (this.field.definition_settings.allowed_values) {\n        for (const i in this.field.definition_settings.allowed_values) {\n          options.push({\n            value: i,\n            text: this.field.definition_settings.allowed_values[i],\n          });\n        }\n      }\n      return options;\n    },\n    is_target_type() {\n      if (this.field.definition_settings.target_type) return true;\n      else return false;\n    },\n    is_multiple() {\n      if (this.field.cardinality === 1) return false;\n      else return true;\n    },\n  },\n  mounted() {\n    this.selected = this.getValue();\n  },\n  methods: {\n    getFistVocab() {\n      if (this.field.definition_settings.handler_settings.target_bundles) {\n        const keys = Object.keys(\n          this.field.definition_settings.handler_settings.target_bundles\n        );\n        return this.field.definition_settings.handler_settings.target_bundles[\n          keys[0]\n        ];\n      } else return null;\n    },\n    input(val) {\n      const vals = [];\n      if (this.is_target_type) vals.push({ target_id: val });\n      else vals.push({ value: val });\n      this.$emit(\"setValue\", vals);\n    },\n    /**\n     * Cette approche a apparament un soucis car il ne tient pas en compte le multiple value.\n     */\n    getValue() {\n      if (this.model[this.field.name] && this.model[this.field.name][0]) {\n        if (this.is_target_type)\n          return this.model[this.field.name][0].target_id;\n        else return this.model[this.field.name][0].value;\n      }\n      return null;\n    },\n    getValidationState(validation) {\n      var valid = true;\n      return (validation.dirty || validation.validated) && !valid\n        ? valid\n        : null;\n    },\n    getRules() {\n      return config.getRules(this.field);\n    },\n  },\n};\n</script>\n","import mod from \"-!../../../../create-website/node_modules/thread-loader/dist/cjs.js!../../../../create-website/node_modules/babel-loader/lib/index.js??clonedRuleSet-120[0].rules[0].use[1]!../../../../create-website/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./OptionsAllowedValues.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../create-website/node_modules/thread-loader/dist/cjs.js!../../../../create-website/node_modules/babel-loader/lib/index.js??clonedRuleSet-120[0].rules[0].use[1]!../../../../create-website/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./OptionsAllowedValues.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./OptionsAllowedValues.vue?vue&type=template&id=6505b50f&\"\nimport script from \"./OptionsAllowedValues.vue?vue&type=script&lang=js&\"\nexport * from \"./OptionsAllowedValues.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../create-website/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","_s","field","type","attrs","fullname","getRules","scopedSlots","_u","key","fn","validation","label","options_allowed_values","getValidationState","on","input","model","value","callback","$$v","selected","expression","staticRenderFns","name","components","props","required","namespaceStore","data","options","computed","definition_settings","allowed_values","push","i","text","is_target_type","target_type","is_multiple","cardinality","mounted","getValue","methods","getFistVocab","handler_settings","target_bundles","keys","val","vals","target_id","$emit","valid","dirty","validated","component"],"sourceRoot":""}